<VARIÁVEIS (COMPOSTAS HOMOGÊNEAS MULTIMENSONAIS):> <!-- MATRIZES -->

Em multimensonais, adicionamos mais dimensões, isto é, enquanto em vetores usamos apenas um CONCHETES e mais a quantidade de espaços que vamos dar a variável, em variáveis compostas mutimensonais, adicionamos mais uma dimensão, isto é, vamos colocar além de linhas, colunas!

	Sintaxe: <Var>
		 <M: vetor[1..3, 1..2] de inteiro> <!-- aqui eu tenho duas dimenssões 1° [1..3] e 2° [1..2], separadas por vírgula. -->
	
			-Isto é, eu tenho 3 dimenssões de linhas (verticalmente) 1, 2 e 3, e (horizontalmente) eu tenho 2 dimenssões 1 e 2, que é o número de colunas que está variável vai ter;
        		-Se em vetores, tratamos a variável com apenas uma dimenssão, que é uma linha com uma certa quantidade de espaço especificado (posições), agora vamos utilizar variáveis compostas que tenha mais de uma dimenssão, ou seja, ao declarar mais de uma dimensão a quantidade que seria pra criar as posições da minha linha, elas agora vão criar a quantidade de linhas que minha variável vai ter, então [1..3] não é uma linha de 1 até a posição 3, e sim, 3 linhas, pois o que vai gerar minhas posições nessas linhas, é minha 2° segunda dimenssão [1..2] ou seja, colunas, neste caso, 2 colunas, sempre do 1 até (2) a quantidade especificada; 

			-Como colocar os valores nas devidas posicionos, como funciona:

			× <M[1,2]> <- 4 ; O n° 1° representa a primeira posição, da primeira linha da minha variável. O n° 2 qual coluna vamos colocar, neste caso, seria na segunda coluna da minha variável. Ou seja, o n° 4 colocariamos na 1° linha, e na 2° coluna. 

				    ex: 1°L = [   ][ 4 ][   ][   ]
   				        2°L = [   ][   ][   ][   ]
    					3°L = [   ][   ][   ][   ]
	   				       1-C  2-C  3-C  4-C

			× <M[2,2]> <- 5 ; Novamente, o n° 2 representa a segunda posição, da minha segunda linha da minha variável. O n° 2 qual coluna vamos colocar, neste caso, seria na segunda coluna da minha variável. Ou seja, o n° 5 colocariamos na 2° linha, e na 2° coluna.

				    ex: 1°L = [   ][   ][   ][   ]
					2°L = [   ][ 5 ][   ][   ]
					3°L = [   ][   ][   ][   ]
					       1-C  2-C  3-C  4-C

			Usando colunas, ela nos ajuda a colocar os valores nas posição de cada linha, ex: 1° Linha, 3° Coluna = 3° posição da minha 1° linha da variável. Ou seja, criando varis dimenssões, você não só adiciona linhas com uma quantidade de espaços, e sim, cria as colunas dessas linhas, o que facilita na hora de posicionar os valores em cada espaço de quadrado em branco criado.

				    ex: 1°L = [   ][   ][ x ][   ] <!-- Resultado da explicação -->
					2°L = [   ][ x ][   ][   ] <!-- 2° linha, 2° coluna M[2,2]-->
					3°L = [   ][   ][   ][ x ] <!-- 3° linha, 4° coluna M[3,4] -->
					       1-C  2-C  3-C  4-C

			Exemplo1: <Var>
				  M: vetor[1..3, 1..2] de inteiro

				  <Inicio> <!-- Incio do programa --> 

					M[1,2] <- 4 <!-- 1° linha, 2° coluna -->
					M[2,2] <- 5 <!-- 2° linha, 2° coluna -->
					M[3,1] <- 8 <!-- 3° linha, 1° coluna -->

				 <Resultado:>
				       ex: 1°L = [   ][ 4 ] 
				           2°L = [   ][ 5 ] <!-- Usando variáveis compostas homogêneas muldimensionais [MATRIZES] -->
					   3°L = [ 8 ][   ] 
					       	  1-C  2-C

			Está matriz, de 3 linhas e 2 colunas, é uma matriz de dimensão 3 por 2;
			Para atribuir os valores em cada espaço da minha variável (matriz), eu vou precisar sempre de dois indice, isto é, eu preciso INDICAR sempre a LINHA que estou e a COLUNA que estou. EX: Para L <- 1 até 3 (isto para linhas); EX: Para C <- 1 até 3 (isto para colunas);
			<Importante!:>
